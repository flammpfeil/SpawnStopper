<project name="BDDeobfer" basedir="../" default="test">
    <property environment="env" />
    <property file="buildspecs.properties" prefix="buildspecs" />


    <property name="mod.version" value="r1" />
    <property name="mod.modname" value="SpawnStopper" />

    <property name="mod.modid" value="spawnStopper" />
    <property name="mod.mydomain" value="flammpfeil" />
    <property name="mod.fulldomain" value="${mod.mydomain}.${mod.modid}" />

	<property name="mod.packagetarget" value="**/mods/${mod.mydomain}/${mod.modid}/*.class" />

    <condition property="mod.build" value="${env.BUILD_NUMBER}" else="0">
        <isset property="env.BUILD_NUMBER" />
    </condition>
    <property name="mc.version" value="1.6.2" />
    <property name="forge.version" value="9.10.1.871" />
    <property name="ccobf.version" value="1.0.0.15" />

    <property name="src.dir" value="${mod.modname}" />
    <property name="build.dir" value="build" />
    <property name="download.dir" value="download" />
    <property name="jar.dir" value="dist/${mc.version}/${mod.version}-${mod.build}" />
    <property name="forge.dir" value="${build.dir}/forge" />
    <property name="mcp.dir" value="${forge.dir}/mcp" />


    <!-- SubModNames -->
    <property name="mod.name.base" value="${mod.modname}-${mc.version}-${mod.version}.${mod.build}.jar" />

    <property name="forge.name" value="minecraftforge-src-${mc.version}-${forge.version}.zip" />
    <property name="forgeuni.name" value="minecraftforge-universal-${mc.version}-${forge.version}.jar" />
    <property name="ccobf.name" value="CCObfuscator-all-${ccobf.version}.jar" />


    <!-- Check downloaded dependencies -->
    <available property="forge-downloaded" file="${download.dir}/${forge.name}" />
    <available property="forgeuni-downloaded" file="${download.dir}/${forgeuni.name}" />
    <available property="ccobf-downloaded" file="${download.dir}/${ccobf.name}" />


    <!-- Check installed dependencies -->
    <property name="build.dependencies.file" value="${build.dir}/dependencies.properties" />
    <property prefix="build.dependencies" file="${build.dependencies.file}" />
    <condition property="forge-installed">
        <equals arg1="${build.dependencies.forge}" arg2="${forge.version}" />
    </condition>
    <condition property="ccobf-installed">
        <and>
            <isset property="forge-installed" />
            <equals arg1="${build.dependencies.ccobf}" arg2="${ccobf.version}" />
        </and>
    </condition>

    <condition property="runnung-in-ci">
        <isset property="env.TRAVIS" />
    </condition>


    <!-- Make directories -->
    <mkdir dir="${build.dir}" />
    <mkdir dir="${download.dir}" />
    <mkdir dir="${jar.dir}" />


    <!-- Targets for downloading dependencies -->
    <target name="download-forge" unless="forge-downloaded">
        <get src="http://files.minecraftforge.net/${forge.name}" dest="${download.dir}" usetimestamp="true" />
    </target>

    <target name="download-forgeuni" unless="forgeuni-downloaded">
        <get src="http://files.minecraftforge.net/${forgeuni.name}" dest="${download.dir}" usetimestamp="true" />
    </target>

    <target name="download-ccobf" unless="ccobf-downloaded">
        <get src="http://files.minecraftforge.net/CCObfuscator/${ccobf.name}" dest="${download.dir}" usetimestamp="true" />
    </target>


    <!-- Targets for installing dependencies -->
    <target name="install-forge" depends="download-forge" unless="forge-installed">
        <echo message="Deleting old Forge" />
        <delete dir="${forge.dir}" />

        <condition property="installargs" value=" --no-assets" else="">
            <or>
                <isset property="env.TRAVIS" />
                <isset property="env.BUILD_ID" />
            </or>
        </condition>

        <echo message="Installing Forge with args '${installargs}'." />
        <unzip src="${download.dir}/${forge.name}" dest="${forge.dir}/.." />
        <property name="fml.python.exe" location="${forge.dir}/fml/python/python_fml.exe" />
        <exec dir="${forge.dir}" executable="${fml.python.exe}" osfamily="windows" failonerror="true">
            <arg line="install.py${installargs}" />
        </exec>
        <exec dir="${forge.dir}" executable="python" osfamily="unix" failonerror="true">
            <arg line="install.py${installargs}" />
        </exec>

        <echo message="Updating build.dependencies" />
        <delete file="${build.dependencies.file}" />
        <propertyfile file="${build.dependencies.file}">
            <entry key="forge" value="${forge.version}" />
        </propertyfile>
    </target>

    <target name="install-ccobf" depends="install-forge,download-ccobf" unless="ccobf-installed">
        <echo message="Deleting old CCObfuscator" />
        <delete file="${mcp.dir}/${build.dependencies.ccobf.name}" />

        <echo message="Installing CCObfuscator" />
        <copy file="${download.dir}/${ccobf.name}" todir="${mcp.dir}" />

        <echo message="Updating build.dependencies" />
        <propertyfile file="${build.dependencies.file}">
            <entry key="ccobf" value="${ccobf.version}" />
            <entry key="ccobf.name" value="${ccobf.name}" />
        </propertyfile>
    </target>

    <target name="install-dependencies" depends="install-forge,install-ccobf" />

    <!-- Targets for building -->
    <target name="recompile">

        <!-- Copy PR source -->
        <echo message="Copying source" />
        <copy todir="${src.dir}/workcommon">
            <fileset dir="${src.dir}/common" />
        </copy>

        <!-- Replace Tokens-->
        <replace dir="${src.dir}/workcommon" token="@VERSION@" value="${mod.version}" />
        <replace dir="${src.dir}/workcommon" token="@BUILD_NUMBER@" value="${mod.build}" />
        <replace dir="${src.dir}/workcommon" token="@MC_VERSION@" value="${mc.version}" />

        <copy todir="${mcp.dir}/src/minecraft">
            <fileset dir="${src.dir}/workcommon" />
        </copy>


        <echo message="Recompiling" />
        <property name="mcp.python.exe" location="${mcp.dir}/runtime/bin/python/python_mcp.exe" />
        <exec dir="${mcp.dir}" executable="${mcp.python.exe}" osfamily="windows" resultproperty="recompile.code">
            <arg line="runtime/recompile.py" />
        </exec>
        <exec dir="${mcp.dir}" executable="python" osfamily="unix" resultproperty="recompile.code">
            <arg line="runtime/recompile.py" />
        </exec>

        <echo message="Removing source" />
        <delete includeemptydirs="true">
            <fileset dir="${mcp.dir}/src/minecraft">
                <present present="both" targetdir="${src.dir}/common" />
            </fileset>
        </delete>

        <fail message="Failed to recompile">
            <condition>
                <isfailure code="${recompile.code}" />
            </condition>
        </fail>
    </target>

    <target name="reobfuscate">
        <echo message="Reobfuscating" />
        <java jar="${mcp.dir}/${ccobf.name}" fork="true" failonerror="true" resultproperty="reobfuscate.code">
            <arg value="--mcp" />
            <arg value="${mcp.dir}" />
            <arg value="-qs" />
        </java>

        <echo message="Copying Resources" />
        <delete dir="${mcp.dir}/reobf/resources" />
        <copy todir="${mcp.dir}/reobf/resources">
            <fileset dir="${src.dir}/resources" />
        </copy>

        <!-- Replace Tokens-->
        <replace dir="${mcp.dir}/reobf/resources" token="@VERSION@" value="${mod.version}" />
        <replace dir="${mcp.dir}/reobf/resources" token="@BUILD_NUMBER@" value="${mod.build}" />
        <replace dir="${mcp.dir}/reobf/resources" token="@MC_VERSION@" value="${mc.version}" />
        <replace dir="${mcp.dir}/reobf/resources" token="@FORGE_VERSION@" value="${forge.version}" />
        <replace dir="${mcp.dir}/reobf/resources" token="@FMP_VERSION@" value="${fmp.version}" />

        <replace dir="${mcp.dir}/reobf/resources" token="@MODID@" value="${mod.fulldomain}" />
        <replace dir="${mcp.dir}/reobf/resources" token="@MODNAME@" value="${mod.modname}" />

        <fail message="Failed to reobfuscate">
            <condition>
                <isfailure code="${reobfuscate.code}" />
            </condition>
        </fail>
    </target>

    <target name="package">
        <echo message="Building Jar" />
        <mkdir dir="${jar.dir}" />

        <!-- Packaging Main -->
        <echo message="Packaging Main" />
        <jar destfile="${jar.dir}/${mod.name.base}" manifest="${mcp.dir}/reobf/resources/MANIFEST.MF">
            <fileset dir="${mcp.dir}/reobf/minecraft" includes="${mod.packagetarget}" />

        	<!--, path , **/mods/** -->

        	<fileset dir="${mcp.dir}/reobf/resources" excludes="MANIFEST.MF">
            </fileset>
        </jar>

    </target>

    <target name="test">
        <antcall target="install-dependencies" />
        <antcall target="recompile" />
        <antcall target="reobfuscate" />
        <antcall target="package" />
    </target>

</project>